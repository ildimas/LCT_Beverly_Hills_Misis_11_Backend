"""auto migrations

Revision ID: 440ade8f4814
Revises: f4cdcf763f82
Create Date: 2024-06-14 21:51:48.763549

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '440ade8f4814'
down_revision: Union[str, None] = 'f4cdcf763f82'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('allocations', 'user_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('allocations', 'category_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.add_column('bills_to_pay', sa.Column('user_id', sa.UUID(), nullable=False))
    op.add_column('bills_to_pay', sa.Column('bill_id', sa.UUID(), nullable=False))
    op.add_column('bills_to_pay', sa.Column('alloc_id', sa.UUID(), nullable=False))
    op.drop_constraint('bills_to_pay_allocation_id_fkey', 'bills_to_pay', type_='foreignkey')
    op.create_foreign_key(None, 'bills_to_pay', 'allocations', ['alloc_id'], ['alloc_id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'bills_to_pay', 'users', ['user_id'], ['user_id'], ondelete='CASCADE')
    op.drop_column('bills_to_pay', 'uuid')
    op.drop_column('bills_to_pay', 'allocation_id')
    op.add_column('prediction_files', sa.Column('user_id', sa.UUID(), nullable=False))
    op.add_column('prediction_files', sa.Column('preds_id', sa.UUID(), nullable=False))
    op.alter_column('prediction_files', 'allocation_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.create_foreign_key(None, 'prediction_files', 'users', ['user_id'], ['user_id'], ondelete='CASCADE')
    op.drop_column('prediction_files', 'uuid')
    op.add_column('reference_books', sa.Column('user_id', sa.UUID(), nullable=False))
    op.add_column('reference_books', sa.Column('ref_id', sa.UUID(), nullable=False))
    op.add_column('reference_books', sa.Column('alloc_id', sa.UUID(), nullable=False))
    op.add_column('reference_books', sa.Column('bin_contracts', sa.LargeBinary(), nullable=True))
    op.add_column('reference_books', sa.Column('bin_codes', sa.LargeBinary(), nullable=True))
    op.add_column('reference_books', sa.Column('bin_fixedassets', sa.LargeBinary(), nullable=True))
    op.add_column('reference_books', sa.Column('bin_building_squares', sa.LargeBinary(), nullable=True))
    op.add_column('reference_books', sa.Column('bin_contracts_to_building', sa.LargeBinary(), nullable=True))
    op.drop_constraint('reference_books_allocation_id_fkey', 'reference_books', type_='foreignkey')
    op.create_foreign_key(None, 'reference_books', 'users', ['user_id'], ['user_id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'reference_books', 'allocations', ['alloc_id'], ['alloc_id'], ondelete='CASCADE')
    op.drop_column('reference_books', 'reference2')
    op.drop_column('reference_books', 'reference4')
    op.drop_column('reference_books', 'allocation_id')
    op.drop_column('reference_books', 'uuid')
    op.drop_column('reference_books', 'reference1')
    op.drop_column('reference_books', 'reference3')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('reference_books', sa.Column('reference3', postgresql.BYTEA(), autoincrement=False, nullable=True))
    op.add_column('reference_books', sa.Column('reference1', postgresql.BYTEA(), autoincrement=False, nullable=True))
    op.add_column('reference_books', sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('reference_books', sa.Column('allocation_id', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('reference_books', sa.Column('reference4', postgresql.BYTEA(), autoincrement=False, nullable=True))
    op.add_column('reference_books', sa.Column('reference2', postgresql.BYTEA(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'reference_books', type_='foreignkey')
    op.drop_constraint(None, 'reference_books', type_='foreignkey')
    op.create_foreign_key('reference_books_allocation_id_fkey', 'reference_books', 'allocations', ['allocation_id'], ['alloc_id'], ondelete='CASCADE')
    op.drop_column('reference_books', 'bin_contracts_to_building')
    op.drop_column('reference_books', 'bin_building_squares')
    op.drop_column('reference_books', 'bin_fixedassets')
    op.drop_column('reference_books', 'bin_codes')
    op.drop_column('reference_books', 'bin_contracts')
    op.drop_column('reference_books', 'alloc_id')
    op.drop_column('reference_books', 'ref_id')
    op.drop_column('reference_books', 'user_id')
    op.add_column('prediction_files', sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'prediction_files', type_='foreignkey')
    op.alter_column('prediction_files', 'allocation_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_column('prediction_files', 'preds_id')
    op.drop_column('prediction_files', 'user_id')
    op.add_column('bills_to_pay', sa.Column('allocation_id', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('bills_to_pay', sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'bills_to_pay', type_='foreignkey')
    op.drop_constraint(None, 'bills_to_pay', type_='foreignkey')
    op.create_foreign_key('bills_to_pay_allocation_id_fkey', 'bills_to_pay', 'allocations', ['allocation_id'], ['alloc_id'], ondelete='CASCADE')
    op.drop_column('bills_to_pay', 'alloc_id')
    op.drop_column('bills_to_pay', 'bill_id')
    op.drop_column('bills_to_pay', 'user_id')
    op.alter_column('allocations', 'category_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('allocations', 'user_id',
               existing_type=sa.UUID(),
               nullable=True)
    # ### end Alembic commands ###
